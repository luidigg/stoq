// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stoq.Data;

#nullable disable

namespace stoq.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250411203425_AddColunaOrigemEmDoacoes")]
    partial class AddColunaOrigemEmDoacoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Stoq.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ValidadeEstimadaDias")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("Stoq.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Stoq.Models.Doacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRecebimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioRecebedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioRecebedorId");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("Stoq.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DoacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Validade")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("DoacaoId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("Stoq.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Entidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Stoq.Models.SaidaDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoSaida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SaidaDoacoes");
                });

            modelBuilder.Entity("Stoq.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Stoq.Models.Alimento", b =>
                {
                    b.HasOne("Stoq.Models.Categoria", "Categoria")
                        .WithMany("Alimentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Stoq.Models.Doacao", b =>
                {
                    b.HasOne("Stoq.Models.Usuario", "UsuarioRecebedor")
                        .WithMany()
                        .HasForeignKey("UsuarioRecebedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRecebedor");
                });

            modelBuilder.Entity("Stoq.Models.Estoque", b =>
                {
                    b.HasOne("Stoq.Models.Alimento", "Alimento")
                        .WithMany("Estoques")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stoq.Models.Doacao", "Doacao")
                        .WithMany("ProdutosRecebidos")
                        .HasForeignKey("DoacaoId");

                    b.Navigation("Alimento");

                    b.Navigation("Doacao");
                });

            modelBuilder.Entity("Stoq.Models.Log", b =>
                {
                    b.HasOne("Stoq.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Stoq.Models.SaidaDoacao", b =>
                {
                    b.HasOne("Stoq.Models.Estoque", "Estoque")
                        .WithMany()
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stoq.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Stoq.Models.Alimento", b =>
                {
                    b.Navigation("Estoques");
                });

            modelBuilder.Entity("Stoq.Models.Categoria", b =>
                {
                    b.Navigation("Alimentos");
                });

            modelBuilder.Entity("Stoq.Models.Doacao", b =>
                {
                    b.Navigation("ProdutosRecebidos");
                });
#pragma warning restore 612, 618
        }
    }
}
